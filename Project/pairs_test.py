import pandas as pd
import numpy as np

# Leia o arquivo TSV e armazene-o em um DataFrame
# Supondo que o arquivo TSV esteja em 'caminho/do/arquivo.tsv'
df = pd.read_csv('results/results5_less_degenerated.tsv', sep='\t')
df_reverse_complement = pd.read_csv('results/results6_revcomp_less_degenerated.tsv', sep='\t')
primers_df = pd.read_csv('primers.csv', sep=';')


# Criar uma função para calcular a distância entre dois primers
def calcular_distancia(primer1, primer2):
	return primer1 - primer2

# Criar um dicionário para armazenar as distâncias entre pares de primers para cada organismo
distancias_por_organismo = {}

# Obter a lista de nomes de primers
primers = df['Primer'].tolist()
filtered_primers = ['5COI-R2', 'a2237', 'A2590', 'A2f1', 'A2f2', 'A2r1', 'A2r2', 'A4f', 'A4r', 'A5f', 'aantennf', 'AG-3R', 'AH-CO1A-AS1', 'AHyFu-F', 'AHyFu-R', 'AHyLe-Fa', 'AHyMe-F', 'AminF', 'AminR', 'Amp_CO1f', 'AmphR3', 'AMR1deg_R', 'Ana-361F', 'Anad1', 'Anad1R', 'AncientLepF6', 'AncientLepR3', 'ANTMR1D', 'APOR1', 'AquaF2', 'AR3', 'ArgF1', 'ArgF20', 'ArgR1', 'ArgR648', 'ArthroF.33', 'ArthroF.44', 'ArthroR.01', 'ArthroR.02', 'ArthroR.06', 'ArthroR.12', 'ArthroR.21', 'ArthroR.36', 'ArthroR.43', 'ArthroR.46', 'ArthroR.51', 'ArthroR.71', 'AvMiR1', 'AWCF1', 'AWCintF2', 'AWCintF4', 'AWCintR2', 'AWCintR4', 'AWCintR6', 'Bas_12F', 'Bas-12F', 'Bas_2eR', 'Bas_4R', 'BatL5310', 'BC1R', 'BC2F', 'BC2R', 'BC3F', 'BC3R', 'BC4F', 'BC4R', 'BC5F', 'BC5R', 'BC6F', 'bcdF01', 'bcdR04', 'BC-F3', 'BC-R2', 'BeeR', 'BF3', 'BirdF1', 'BirdR1', 'BirdR2', 'BirdR3', 'BloodmealF2', 'BNX_211F', 'BNX_345F', 'BNX_345R', 'BNX_607R', 'Bo11-091', 'Bovid_F1', 'Bovid_R1', 'Brh-2R', 'BryR1', 'BtabINT_F', 'BtabINT_R', 'BterrestrisR', 'C11020F', 'C1-1554F', 'C1-J-1718F', 'C1-J-1718-MODR', 'C1-J-1718spi', 'C1-J-1751', 'C1-J-1751F', 'C1-J-1751-MODR', 'C1-J-1859F', 'C1-J- 2195', 'C1-N-1540-MODR', 'C1-N-1540R', 'C1N2329M', 'C1-N-2650', 'C1-N-2776spi', 'C1-S-1718', 'CaestuariiF', 'CamF1', 'CamR1', 'CAS18sF1', 'Cer_COI_F', 'ChaetR1', 'Chelicerate-F1', 'Chelicerate-R1', 'Chelicerate-R2', 'Chmf4', 'Chmr4', 'CirrCOIR', 'Cni_cox1_f1', 'CnidR1', 'CO1-2166F', 'CO1-ExtF', 'CO1-ExtR', 'CO1F(L)', 'CO1UnivF', 'COBU', 'Cocc301R', 'COH6', 'COI_2437d', 'COI_2rev', 'COI50L-cal', 'COI746H-cal', 'COI748H', 'COI748Ht', 'COI908aH2', 'COI_AEGLA_F1', 'COIalbfwd', 'COIamph_F', 'COI_bc_SphF2', 'COI_bc_SphF4', 'COI_bc_SphF5', 'COI_bc_SphF6', 'COI_bc_SphR1', 'COI_bc_SphR3', 'COI_bc_SphR5', 'COIbirdF1', 'COIbirdR1', 'COIbirdR2', 'COIBR', 'COI-C03', 'COI-C04', 'COI_E-', 'COI_Eim1166B', 'COI_Eim1166R', 'COI_Eim361F', 'COIeR1', 'COIF', 'COI-F', 'COI(F)', 'COI-F1', 'COI_f118', 'COI-F2', 'COI-F3', 'COI_f367', 'COI_f496', 'COI Fish-F', 'COIFshmp', 'COIG', 'COIH615', 'COI-HCO2198', 'COIH_Genio08', 'COI-Na-2', 'COINP', 'COI_pF2', 'COIR', 'COI(R)', 'COI-R2', 'COI-R3', 'COI_Rep_5R', 'COI_Rep_F5', 'COIRshmp', 'COIschneckrv', 'COI T F', 'COI T R', 'COIWR', 'Col348F', 'ColR1', 'CoR', 'COR2198', 'CowF1', 'CowR1', 'cox1ajf699R', 'COX1_AplyF', 'cox1. dino.2.r', 'COX1 Kuhl', 'cox1 RE', 'Cox1-RF578-F', 'Cox1-RF-R', 'Cox1schi5tri', 'Cox1Tyr-RF-F', 'cox42F', 'coxf', 'coxr2', 'CRF', 'CRR', 'CrustDF1', 'CrustDR1', 'CrustDR2', 'CRYPCOIR', 'Cyobt1_rv', 'DBGB1', 'DEGmtCO1R', 'DevF1', 'DFCOIFP', 'dgHCO-2198', 'dgLCO-1490', 'dgNJCOIF', 'dgNJCOIR', 'DiamR1', 'dinF', 'Dorid_COI.1R', 'Dorid_COI.3F', 'Dri-mr', 'EcaniolaR', 'Ech2modF1', 'Echino COI-F', 'Echino_COI-R', 'EchinoF1', 'EchinoR1', 'eCO1-1H', 'eCO1-2H', 'ELLIPR0385', 'enhANTr1', 'EnhLepR1', 'enhTACr1', 'enhWASPr1', 'E_r2', 'E_r3', 'eTyr-1L', 'EUSC-H1', 'EUSC-L1', 'EUSC-L2', 'EUSC-L3', 'f220', 'FalcoFA', 'FB_CO1-1H', 'FB_CO1-1L', 'FB_CO1-2H', 'F/COI', 'FF2d', 'FI3-F', 'FI3-R', 'FI4b-F', 'fibo1', 'fibo2', 'FIFC3', 'FISH 1', 'Fish1', 'FISH1R', 'Fish-BCH', 'Fish-BCL', 'FISHCOI-F', 'FISHCOX1F', 'FISHCOX1R', 'FishF2', 'FishR2', 'FM55', 'FMEL', 'Fol-deg-rev', 'FR1d', 'FWPTF1', 'GazR1', 'GazR3', 'GazR5', 'GHalR', 'GomphHCO', 'GrR2', 'GWSRx', 'H10884', 'H14AcanCOIRv', 'H14COINemaRv', 'H15CuliCOIRv', 'H2198-Alb', 'H600', 'H7005', 'H7271-Coi', 'H7271 COXI', 'H7390Thrush', 'H7548', 'H7696', 'HCO', 'HCO2064', 'HCO2198', 'HCO2198A', 'HCO2198_CephR', 'HCO2198D', 'HCO2198hem', 'HCO2198-JJ', 'HCO2198-JJ2', 'HCO2198-JJ3', 'HCO2198-L', 'HCO2198_M13', 'HCO2198_Mol1', 'HCO2198-puc', 'HCOI', 'HCOI-EPH', 'HCO-mix', 'HCOprot', 'HCO-Z', 'HiaF1', 'HiaR1', 'H-turtCOI', 'H-turtCOIb', 'H-turtCOIc', 'In3f', 'In3r', 'JB3', 'jgHCO2198', 'K698', 'K698D', 'K699', 'KEint2F', 'KUMAR-R', 'L1_DCHIM', 'L5698-Asn', 'L6468', 'L6615', 'L6697Bird', 'LatibulusF', 'LCO', 'LCO1490', 'LCO1490A', 'LCO1490-Ven', 'LCO22me2', 'LCOech1aF1', 'LCOIEA', 'LCO-V1', 'LepFoIR', 'LepR1', 'LepR2', 'Lev_lo_h', 'Lev_up', 'LGCOIR', 'LHM1R', 'LHM4F', 'LIICO1R', 'LimF', 'LoboR1', 'Lonch_fugaxF', 'Lonch_fugaxR', 'LPX-F', 'L-turtCOI', 'L-turtCOIc', 'LTyr', 'LYR-2169', 'M13 Forward', 'M13R-22', 'M3f', 'M3r', 'M4f', 'M4r', 'M5f1', 'M5f2', 'mantoF1', 'mantoR', 'MHemF', 'MiteCOI-2F', 'MiteCOI-2R', 'MiteCOI_rev2', 'mlCOIintF', 'MLepF1-Rev', 'MLepF2', 'MLepR1', 'MLepR2', 'MScorpR1', 'mtD-9.2R', 'Mul-1R', 'NancyM', 'Nematode-COI-F1', 'Nematode-COI-R2', 'Nux1R', 'NVMOR_COI_AS', 'NVMOR_COI_S', 'ODO_HCO2198d', 'OEDULISR', 'P1COIF', 'P1COIR', 'P360F', 'P360R', 'PasserF1', 'PasserR1', 'Pat', 'PBCOIdF', 'PBCOIdR1', 'PBCOIdR2', 'PenF1', 'PENT-F2', 'Pernacox1F', 'PezizF', 'Peziz-F', 'Peziz-R', 'plat-diploCOX1R', 'PlatyF1', 'PlatyF2', 'PlatyR1', 'plesionikar', 'POECmini_1', 'POECmini_10', 'POECmini_11', 'POECmini_12', 'POECmini_13', 'POECmini_14', 'POECmini_15', 'POECmini_2', 'POECmini_3', 'POECmini_4', 'POECmini_5', 'POECmini_7', 'POECmini_8', 'POECmini_9', 'Poly_F_2-0C', 'polyHCO', 'Poly_R1_0D', 'Poly_R_2-2', 'Poly_R_3-6', 'Poly_R_3_8A', 'Poly_R_3_8B', 'Poly_R_5-8', 'Poly_R_6-4', 'PolyshortCOIR', 'PORF1', 'Primer1-F1', 'ProtF2', 'PythonF1', 'PythonR1', 'PythonR2', 'R089', 'R249', 'R6036R', 'R872', 'RANG', 'RCATH', 'R COI', 'R/COI', 'RepCOI-OBG-F', 'RepCOI-OBG-R', 'RepCOI-R', 'RepCOI-SOK-F', 'RepCOI-SOK-R', 'REPTBCr', 'RhoR', 'RibbonR1', 'ribo1', 'RMEL', 'RMUN', 'Ron', 'RonIIdeg_R', 'RonM', 'RonMP', 'RonV', 'RotCOI_R', 'RVOG', 'S083', 'S088', 'S092', 'S192', 'S220', 'S259', 'SaltCOIminiF', 'SaltCOIminiR', 'Scar3F', 'Scar4F', 'ScorpF1t1mod', 'ScorpR1t1mod', 'SFF_145f', 'SFF_351r', 'SipR1', 'SophyF2', 'SPACOIREV', 'SpCOXDd', 'SpCOXRr', 'SPF', 'SPID CO1F', 'SpoonR1', 'SPR', 'St_f', 'St_r', 'STY_LCOiii', 'sym-C1-J-1718', 'symC1-J1751', 'SymR1', 'TAR-CF1_F', 'TAR-CF1_R', 'TelF1', 'TelR1', 'Tp2390F', 'Trem_Co1R', 'tRNA-cys2', 'TunR1', 'TY-J-1460', 'TY-J-1461', 'Type164R1', 'TypeF1', 'TypeF2', 'TypeR2', 'UBC6 F', 'UBC9 R', 'UCOIF', 'Uni-MinibarF', 'UTyr', 'VDCO-IF', 'VDCO-IR', 'VF1', 'VF1d', 'VF2', 'VR1', 'VR1d', 'Vsim_386F', 'Vsim_406R', 'Vsim_55F', 'Vsim_678R', 'VVERRUCOSAF', 'VVERRUCOSAR', 'WF_F', 'WF_R', 'XSR', 'ZDOE-COI-fw', '28SR', '5.8Sf', '5.8SF SHORT', 'CAS28sB1d', 'CAS28sB1deg', 'CAS5p8sFc', 'CAS5p8sFtdeg', 'ColeoF', 'ColeoR', 'FISH5.8SF', 'ITS2_28S', 'ITS2_5.8S', 'ITS2-5.8s', 'ITS2_606F', 'ITS2A', 'ITS2_F', 'ITS2-F', 'ITS2Fe', 'ITS2_R', 'ITS2-R', 'ITS2Re', 'ITS5.8SF', 'ITS-F2', 'ITS_P3', 'ITS-p3', 'ITS_P4', 'ITSP5', 'ITS-R2', 'ITS_S3R', 'MAS-ITS2Fdeg', 'SI-ITS2f', 'Snail_ITS2-F', 'Snail_ITS2-R', 'TN-ITS2-R', '12SCRF', '16S-1073R', '16S-1492R', '16S2R', '16S-361R', '16S-785R', '16S-8F', '16SAN-R', '16Sar', '16Sb', '16Sbr', '16sbr', '16SBr-Dr', '16Sbr-H', '16Sbr_wob', '16SC', '16SCLr', '16sf', '16SF_Lysmata', '16Sfw', '16SgaR', '16S-JMP-F', '16Smam1', '16Smam2', '16S-OnuR', '16SR_Lysmata', '16SR-MT', '16SrRNA F', '16SRtamp2', '16s_sch_rev', '16S SF', '16S SR', 'ACT1360R', 'An16S_dir', 'An16S_rev', 'Ann16SF', 'Ann16SR', 'CYA106F', 'CYA359F', 'CYA781R-a', 'CYA781R-b', 'D16SBR', 'fff', 'Fish16SF/D', 'LH-16SR1', 'LR-J', 'pA-f', 'PLG1-1', 'PLG2-1', 'primer 1', 'primer 2', '1000F', '1155F', '1155R', '1250FNmod', '1500mod', '1510R', '1800mod', '18A1mod', '18H-3', '18H-3R', '18L', '18S-1', '18S1100R', '18S_1573R', '18S1F', '18S 1F', '18S 1R', '18S-2', '18S2R', '18S 2R', '18S3', '18S-3', '18S3F', '18S-4', '18S4F', '18S4R', '18S5', '18S 5', '18S-5', '18S637modR', '18S-81', '18S-83', '18S_965', '18S 9F', '18S9modF', '18S9R', '18SA', '18S_ai', '18SB', '18sB', '18S_bi', '18SC2', '18SF', '18S_F23', '18SFb', '18Sfw', '18SR', '18s- R', '18S_R2', '18S_R81', '18S_R82', '18SRb', '18SY', '26R', '400F', '5FK', 'AM1', 'AML1', 'AML2', 'BTH-1F', 'BTH-1R', 'CER743R', 'CLA458F', 'F1011CHAR', 'F1366LUM', 'F136SIM', 'F152MYR', 'F165PLA', 'F-566', 'FLR3', 'H35R', 'HEP300', 'HEP900', 'JABL -18S F', 'JABL - CF', 'jww18sr1', 'KOBO18SF1', 'KOBO18SR1', 'M18F', 'M18R', 'myt18SR', 'Nem_18S_F', 'NS2', 'NS3', 'NS31', 'NS7', 'NS8', 'R-1200', 'SarcoF', 'SarcoR', 'SR1', 'SS11H', 'SSU-2004R', 'SSU897', 'SSU_F09', 'SSU_F11', 'SSU_FO4', 'SSU_R22', 'Uni18S', 'WormA', 'WormB', '1500R', '28B', '28b', '28C', '28Hy_F', '28R6', '28S', '28S1', '28S-1000R', '28S31', '28S-700F', '28SC', '28SC2-R', '28SD1R', '28SD2D3Fwd', '28SD2D3Rev', '28S D9-10 F1', '28SDD', '28S-Dipt-3385F', '28SDKF', '28S F', '28S-Far', '28SFF', '28SHy_R', '28SKa', '28SKb', '28SL', '28S R', '28S-Rar', '28S rD3.2a', '28S Rd4.2b', '28s-rD5b', '28S-R-Met', '28S_tarF1', '28S_tarR1', '28Sz', '300F', '900F', 'D2-3665F', 'D2aprot', 'D2B', 'D3A', 'D3Ar', 'D3b', 'D3B-R', 'D3Ca', 'D3R', 'D3-R', 'D6R', 'ECD2', 'F63', 'F63.2', 'FLR2', 'H28SF', 'LH-28SF3', 'LH-28SR3', 'LSU1600R', 'LSU5', 'R2077', 'R635', 'S3660', 'T04', 'T05', 'T08', 'T10', 'T13', 'T15', 'T19N', 'T22', 'T30', 'T33', '1231R', '453L', '543F', 'BLSrbcS377R', 'CfD', 'DiatrbcL708F', 'DtrbcL2R', 'DtrbcL3R', 'ESRBCL628F', 'ESRBCL654R', 'F08', 'F1150Cor', 'F1237', 'F481', 'F577', 'F993', 'GF-AB', 'GrbcLFi', 'GR-D', 'KL8', 'KR1', 'KR2', 'M636F', 'M745R', 'MtmRR', 'NDrbcL8', 'NM34', 'NolrbcL-f', 'NolrbcL-r', 'P1f', 'P2r', 'PalR1', 'PlatRBCL_F4', 'PlatRBCL_R2', 'R1144', 'R1150', 'R1150a', 'R897a', 'R897c', 'rbcL1460R-ca', 'rbcL1T', 'rbcL_2F', 'rbcL636F_mod', 'rbcL-68F', 'rbcL_724R', 'rbcL80F', 'rbcL-aar', 'rbcLajf634R', 'rbcLb-Sf', 'rbcLb-Sr', 'rbcl_F', 'rbcLF7', 'rbcL-FP', 'rbclL', 'rbcL.Op_m_rc', 'rbcL-R', 'rbcLrev', 'rbcL-RP', 'RedMetF4', 'RH1', 'RHhodyF', 'RhodyR', 'RrIf', 'Rub', 'TLF1', 'TLF5', 'CucurmatKF', 'CucurmatKR', 'F1010asterales', 'F1064rosales', 'F2brassicales', 'F2caryophyllales', 'F2lamiales', 'F2ranunculales', 'F389', 'F428fabales', 'F875poales', 'GYM-R1A', 'LivSTH1-1171R', 'LivSTH2-1171R', 'MagF', 'matK-1248R', 'MatK_1326r', 'matK1932Ra', 'MatK-19F', 'matK_1F', 'matK_1_R', 'matK_1R_kim', 'MatK-1RKIM-f', 'matK2.1F', 'matK2F-r', 'matK_2R', 'MatK-3FKIM-r', 'matK-472F', 'matK4La', 'matK8R', 'matKA_r', 'matkBC114F', 'matK_F_A', 'matK_kim3', 'matK-KIM-CRAT-f', 'MATK R1mod', 'matK_R_BHEPS', 'matKtrnKIn2R', 'matKtrnKInt2', 'MquF', 'MquR', 'PolypodR1', 'R1414rosales', 'R1438fabales', 'R1460poales', 'R1498asterales', 'R2brassicales', 'R2caryophyllales', 'R2lamiales', 'R2ranunculales', 'R692', 'R854poales', 'R978asterales', 'TreeFernF', '1234', 'psbA3_f', 'psbA3_r', 'TN-trnH-psbA', 'trnH', 'trnHf_05', 'trnH-PADDY', '340', '5.8S-Pr', 'AlEsP1', 'CAS5p8sB1d', 'CladoITS-7R', 'CladoITS-7Rn', 'CladoITS-9Fn', 'CladoITS-9Fs', 'Clino_ITS_F', 'Cole A', 'DC6', 'DiamITSF', 'Hep2f', 'HepCr', 'HLITS-M1', 'HLITS-M2', 'IT1', 'IT2', 'ITS055R', 'ITS1', 'ITS-1', 'ITS18', 'ITS18SE', 'ITS18Sfa', 'ITS1AKL', 'ITS1-LM', 'ITS1T', 'ITS2', 'ITS2.2', 'ITS26_R', 'ITS26SE', 'ITS26Sra', 'ITS2R_Van', 'ITS3', 'ITS4', 'ITS4-B', 'ITS4BR', 'ITS.4bryo', 'ITS4T', 'ITS5', 'ITS.50W', 'ITS5.8Sfa', 'ITS5.8Sra', 'ITS5aF', 'ITS5-P', 'ITS_5p', 'ITS5-P2', 'ITS6_Oom', 'ITS6_Tuber', 'ITS7', 'ITS8', 'ITS_8p', 'ITS AB101F', 'ITSBD1', 'ITS-C', 'ITSD1', 'ITSD2', 'ITS_FlotF1', 'ITS_FlotF2', 'ITS_FlotF3', 'ITS_FlotR1', 'ITS_FlotR2', 'ITS_FlotR3', 'ITSG4', 'ITS-Leu', 'ITSP1', 'ITS-P1F', 'ITS-p5', 'ITS S5', 'ITS-u1', 'KG4', 'KP5', 'LSU-Tom4', 'MasR1', 'OomLo28S345H', 'ParFOR1', 'ParFOR2', 'ParREV1', 'ParREV2', 'PhyG4', 'RLycF1', 'RLycR1', 'S3', 'Septo_p', 'SR12cF', 'SR891228', 'SSU1318-Tom', 'UNLO28S22', 'UNUP18S42', 'GrbcLR', 'rbcLa-F', 'rbcLa_f', 'rbcLa-R', 'rbcLa r724', 'rbcLplant1', 'rpoB_2f', 'rpoB4R', 'rpoC1-1F', 'rpoC1_2f', 'rpoC1_4r', 'rpoC1_LP5', 'AE0066', 'AJG15', 'B5', 'B6', 'BafF', 'BafR', 'CB1-5', 'CB3-H', 'CB-J-10933', 'CHSorexR', 'CrocSeqF', 'CrocSeqR', 'CYTB2_Univ', 'CYTBF', 'CytbF_BEEZ', 'CytbH14896', 'CytbH15915', 'CytbH15915bis', 'Cytb HNoto', 'CytbL14723', 'CytbL14724', 'CytBl-3R', 'CytBl-6F', 'CYTB-N', 'CytBR', 'cytb-Th', 'FishcytB-F', 'Ful_cytb_F', 'Ful_cytb_R', 'GLU1', 'GluDG.L', 'Glufish', 'Glu-L', 'GluMug1-F', 'H15149a', 'H16064', 'H16460', 'H16526', 'HAEMF', 'HAEMR2', 'HAEMR2L', 'HapF1', 'HapF2', 'HapF3', 'HapR1', 'HapR2', 'HapR3', 'L14724', 'L14841a', 'L14996', 'L15146', 'L15267', 'MAB1', 'MAB2', 'MCB869', 'mCYTB-R', 'MixCytb937-R', 'MTCB-F', 'MVZ15', 'Ph-cytb-F2', 'Ph-cytb-R2', 'S-CytbL', 'Thr2', 'Thr-H', 'TruccytB', 'atpFf', 'MPD9D10', '28F5', '28S-D2-Heraty', '28S-D2R-Heraty', '28SF2', '3690s', 'a4285', 'C1FL', 'D1-3shortR', 'D2dnB', 'D2F', 'D2R', 'D2up4', 'D3arev', 'G1385', 'Po28R4', 'T01N', 'T20', 'T24', '176R', 'PY1-F', 'PY1-R', 'RAG2-F1int', 'Rag2.for.45', 'Rag2.rev.1149', 'Rag2Ri', 'XLAR.rev.431', 'Bear', 'Bo', 'Buck', 'EF1-2218R', 'EF1-728F', 'EF1-983F', 'EF1aF', 'EF1a F', 'EF1af_DipHym', 'EF1aIntR', 'EF1aLepF1', 'EF1aLepF2', 'EF1aLepF3', 'EF1-alpha', 'EF1-alpha R2', 'EF1aR', 'EF1a R', 'EF1ar_DipHym', 'EF-1 rev', 'EF3', 'EF6', 'EF8ir', 'EF-NepF', 'EF-NepR', 'Hutch', 'LibEF1Fa', 'LibEF1Ra', 'Luke', 'Petra', 'Tweeky', 'Verdi3', 'BT2A', 'BT2B', 'ND4F', 'ND4R', '12.1L4E', '12Sa-L', '12SB-H', '12Sbi', '12SCRR', '12S-Dipt-14525R', '12SFor', '12S-frogFa', '12S-frogRa', '12SK-H', '12Sma', '12Smb', '12s-R1', '12s-S2', 'Aa633-12s', 'Ac12s_FW', 'ANTMT12SF', 'ANTMT12SR', 'H13842-12S', 'MiFish-E-F', 'MiFish-E-R', 'MiFish-U-F', 'MiFish-U-R', 'TashanaB@', 'TashanaE', 'teleo_R', 't-Phe-frog', 't-Val-frog', 'C1 CC FOR', 'C1 CC+OAM RU', 'C1 OAM FOR', 'CB3R420', 'CE CVZV 1', 'CE CVZV 2', 'CR-A', 'DD CVZV 3', 'DLH1', 'D Loop', 'D-loop', 'D Loop Carp Phe', 'E3_H15978', 'ESTFOR', 'H16498', 'HDL2', 'L15926', 'L15995', 'LPR02', 'MaMu FOR', 'MaMu REV', 'NewCRev', 'P3', 'snfw1', 'snfwDloop', 'snrw1', 'snrwd-loop', 'SSW CVZV 5', 'SSW CVZV 6', 'UA FOR', 'UA REV', 'F74', 'R1333', 'R1_3543R', 'R1_4078R', 'R182', 'R1_Dan1F', 'R1_Dan2F', 'R270', 'Rag1BolitoF', 'Rag1BolitoR', 'Rag1CF2', 'Rag1CR2', 'RAG1F1', 'RAG1_JHL_Fi', 'RAG1_JHL_Ri', 'RAG1R1', 'LR143F', 'LR639ER', 'Rh1039r', 'Rh1073r', 'Rh193', 'RH28F', 'Rhod1A', 'Rhod1D', 'Rod-F2w', 'Rod-R4n', 'Diam23Sr1', 'p23SrV_r1', 'HDBY7F', 'HDBY7R', '1028N', '323J', 'BF2 Elbrecht', 'C1-J-2495', 'C1L705', 'C1-N-2776', 'C1-N-2800', 'coa3772', 'COI-2n-F', 'COIf', 'COIF270', 'COIR445', 'COIR450', 'cox1F_prifi', 'cox1R_prifi', 'DFCOIRP', 'FISHCOI-R', 'H8205', 'JB5', 'LCO1490_mod', 'Ml-COIF', 'Ml-COIR', 'MulPac2', 'MulRevCom', 'P2COIF', 'P2COIR', 'Pat-Hym', 'Pernacox1R', 'RONPING', 'TL2-N-3014', 'UEA7', 'COII-9b', 'COII-F', 'COII-R', 'COII-R-lys', 'cox2F', 'cox2R', 'mCOII-F', 'm-COII-R', 'Patrick', 'TL2-J-3038', 'H3F', 'H3nF_Poec', 'H3nR_Poec', 'H3R', 'Hist3F', 'Hist3R', 'iWNTf_1f', 'Lepwg-1', 'modLepwg-2', 'TAiWNT_1r', 'wg1032R', 'wgFlv2', '16S647F', 'H6313', 'H6313d', 'L5215', 'L5216', 'L5219', 'ND2-MetF', 'ND2-TrpR', 't-Met', '1098R', '405R', '54F', '787F', 'CAD1028R', 'CAD743nF', 'CWEITest', 'TufAR', 'TufGF4', 'bRPB2-6F', 'bRPB2-7.1R', 'RPB2-7CR', 'RPB2-7R', 'ATP6-DR1', 'ATP6-DR2', 'WSP81F', 'gatB_F1', 'fbpA_F1', 'COICry', 'COICryR', 'Tyr1C', 'Tyr1G', 'Fw1F.EG', 'Re2F.EG', 'F_all', 'F_all_second', 'F_all_third', 'R_all', 'c_mod', 'f_mod', 'trnF_39', 'trnFGAAf', 'TRNL', 'trnL_15', 'trnL_R', 'trnLUAAc', 'trnLUAAd', 'trnL(UAA)e', 'L11935', 'COX8f', 'COX8r', 'Pt96499F', 'Pt97365R', 'ycf1berR', 'ycf1b-fw', 'ycf1meF', 'ycf1meR', 'NGFBF_F2', 'NGFBR_R2', 'TMO-4C4 F2', 'TMO-4C4 R2', 'Pt28456F', 'Pt28893', 'trnL-D3', 'AATSDipt559F', 'AATS-Dipt-962R', 'JB11', 'Leu-uurF', 'LoGlyR', 'NAD1-F', 'NAD1-R', 'nad1 RE', 'COII-8068F', 'COI_R1', 'PatII', 'ND3-2126R', '16S-647F', 'POMC-3', 'POMC_DRV_F1', 'POMC_DRV_R1', 'psbA500F', 'psbA600R', 'psbA-F1', 'psbA-R1', 'Alc_ND6_RV', '18S-R', 'ETS-1F', '28S_ORT_F', 'D2A', 'D3a', 'D3B', 'psa A _1760R', 'S7RPEX1F', 'S7RPEX2R', 'Reuk454FWD1', '18S_Rb', 'Mcm7-1348rev', 'rpsF', 'rpsR2', 'cox2fa', 'cox3ra', 'ND1A (M223)', 'ArgK_F', 'ArgK_R', 'PY-IGS-F', 'PY-IGS-R', 'trnLUAG-R', 'CGtrnK', 'CG-trnk-r', '1AF', '4AR', 'ntcA-1F', 'ntcA-4R', 'ITS1-5.8c-F', 'ITS1-F_moss', 'ITS1 R', 'ITS 2G', 'Giga5.8R', 'A3F2', 'A3R2', 'psbE', 'rCRP_F', 'rCRP_R', '28S-D4D5R', 'rps5', 'psbA21-350F', 'psbA22-350R', 'Cox1 spacer', 'Cox2-3spacer', 'trnK(UUU)x1', 'mrSSU1', 'mrSSU2', 'mrSSU2R', 'mrSSU3R', 'rpl16R71', 'rps3F', '1_F', '1_R', '2_F', '2_R', '3_F', '3_R', '4_F', '4_R', '5_F', '5_R', '6_F', '6_R', '7_F', '7_R', '8_F', '8_R', '9_F', 'trnL(UAA)h', 'atp8-trnS-F', 'atp8-trnS-R', 'R35Ex1', 'R35Ex2', 'pdbBB66', 'psbB2f', 'psbB60', 'psbB61', 'CQ11F2', 'molCQ11R', 'pipCQ11R', 'ACEpip', 'B1246s', 'IgSA', 'IgSB', 'MAP4AP5', 'MSP4AP3', 'msp4f', 'msp4r']
filtered_primers = [3159, 1184, 765, 2404, 2406, 2405, 2407, 2414, 2415, 2418, 1088, 301, 3420, 192, 193, 189, 191, 757, 758, 1443, 960, 88, 3268, 1823, 1824, 1013, 1016, 4, 3703, 690, 3275, 3648, 3679, 3649, 3680, 3787, 3755, 3756, 3792, 3770, 3748, 3743, 3757, 3769, 3788, 3750, 3759, 79, 232, 1787, 1789, 1786, 1788, 1790, 216, 974, 217, 218, 622, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 2025, 2028, 863, 864, 3235, 2986, 22, 23, 24, 25, 2277, 2526, 2524, 2527, 2525, 2475, 772, 773, 3055, 1203, 1427, 1428, 3697, 2814, 3404, 876, 877, 2318, 3043, 878, 879, 880, 2291, 875, 874, 1984, 2872, 2319, 3690, 1104, 1357, 1370, 82, 3510, 2607, 412, 413, 414, 1198, 1199, 3088, 3722, 1658, 2795, 220, 221, 2960, 534, 1910, 3185, 563, 3631, 2752, 212, 213, 277, 811, 276, 2724, 2518, 2528, 381, 385, 387, 389, 380, 384, 388, 222, 70, 71, 3151, 1419, 1521, 683, 842, 841, 820, 225, 1691, 3172, 390, 1348, 2977, 1349, 1528, 2979, 2981, 3080, 2644, 3771, 367, 1750, 3785, 2995, 366, 3724, 1692, 391, 1530, 1531, 3167, 3166, 2688, 1586, 3413, 3414, 3153, 2144, 1398, 1686, 2084, 2138, 2139, 243, 1812, 608, 1985, 3090, 319, 318, 3376, 317, 242, 2462, 2461, 3716, 3717, 298, 299, 360, 533, 2520, 2876, 2059, 2622, 3145, 200, 199, 1344, 1345, 175, 3733, 3067, 3066, 1580, 3721, 615, 2250, 2251, 227, 265, 1576, 1577, 2182, 748, 60, 747, 749, 2422, 2423, 1579, 3391, 3394, 3393, 3392, 2975, 80, 2012, 2011, 2013, 3708, 61, 196, 197, 198, 3440, 3442, 124, 1717, 581, 3033, 73, 72, 3602, 254, 255, 20, 21, 3695, 1020, 3328, 62, 324, 166, 170, 172, 187, 983, 174, 607, 1794, 2897, 1974, 3082, 2493, 336, 647, 1102, 554, 846, 3214, 2900, 2246, 3122, 59, 840, 1410, 2483, 3371, 912, 2244, 3232, 1078, 3430, 2430, 3684, 1784, 3599, 3277, 2397, 2522, 1317, 1318, 3397, 3398, 3399, 2410, 2411, 665, 1472, 416, 2581, 2974, 763, 3060, 409, 1101, 2899, 1258, 283, 3725, 2247, 58, 839, 893, 1377, 427, 1334, 3786, 2875, 2, 1666, 1877, 207, 866, 304, 307, 2074, 1681, 1234, 3692, 3693, 3142, 3395, 3396, 115, 1800, 1695, 2193, 2412, 2413, 2416, 2417, 2420, 2419, 2686, 2687, 524, 2599, 2600, 2598, 2188, 3329, 995, 55, 845, 751, 2517, 3630, 401, 745, 746, 3734, 2204, 2203, 1573, 1116, 2038, 2039, 1092, 1093, 392, 393, 374, 2989, 2990, 2991, 57, 1803, 1832, 291, 195, 194, 257, 2608, 2609, 2610, 1095, 1949, 1956, 1957, 1958, 1959, 1960, 1961, 1950, 1951, 1952, 1953, 1955, 1965, 1966, 2920, 281, 2916, 2921, 2923, 2917, 2918, 2927, 2922, 424, 869, 1725, 1356, 1698, 1699, 1700, 583, 1265, 623, 844, 1021, 1022, 2007, 3709, 2069, 2070, 1154, 2067, 2068, 1380, 967, 1468, 3441, 1024, 1023, 1826, 87, 16, 2721, 2579, 2557, 1025, 1332, 582, 584, 1270, 1371, 1827, 3661, 3662, 2481, 2482, 3084, 3085, 2972, 2973, 1391, 827, 1651, 1873, 1872, 1321, 2425, 2611, 1322, 2400, 2401, 2760, 766, 2558, 1876, 1151, 1152, 644, 643, 2746, 896, 1687, 1202, 549, 2268, 1816, 1144, 1145, 1147, 320, 321, 2195, 3735, 3028, 1113, 1114, 5, 8, 18, 7, 9, 3409, 3408, 3407, 3410, 1175, 1176, 1393, 1394, 3182, 3379, 2130, 2647, 2129, 1837, 629, 1836, 632, 2369, 2370, 3363, 3618, 3617, 1962, 2934, 2136, 2769, 3236, 3194, 2770, 3237, 3195, 2850, 2398, 1065, 2684, 1066, 578, 2399, 1064, 631, 2650, 2292, 2293, 2508, 2821, 2033, 3590, 3300, 2032, 3388, 2031, 3252, 3587, 1408, 3588, 3223, 2820, 547, 2176, 2712, 3311, 3351, 3383, 2433, 600, 1730, 3729, 3730, 2815, 3384, 3188, 661, 3056, 2432, 1298, 1299, 1885, 1493, 1494, 2932, 2933, 2045, 2046, 2049, 2050, 3313, 1401, 3302, 1430, 2377, 1923, 2043, 2044, 1359, 1360, 1302, 1308, 1306, 1303, 1307, 2714, 1304, 1300, 717, 716, 606, 2445, 2235, 2895, 2391, 2125, 2126, 2447, 3715, 2127, 1741, 2448, 2393, 2446, 3714, 3119, 1742, 1711, 3200, 1759, 2541, 2540, 2894, 790, 1758, 2395, 1470, 2304, 3738, 3668, 2305, 2209, 3712, 2271, 3765, 3332, 3713, 3490, 2683, 2574, 2272, 3766, 1469, 2164, 3149, 1749, 2256, 1672, 2257, 3706, 3707, 519, 436, 447, 479, 514, 448, 462, 3234, 292, 2839, 3623, 3624, 2567, 2569, 1527, 3190, 3191, 3323, 3324, 2234, 2165, 1499, 1500, 2253, 1675, 1501, 3233, 3745, 3746, 2206, 2207, 792, 2208, 3326, 3325, 1389, 1390, 2308, 667, 668, 664, 1294, 871, 3322, 3330, 2362, 2380, 2381, 2506, 2236, 2505, 2237, 3793, 2913, 571, 572, 420, 1630, 1295, 3698, 2503, 2325, 1629, 3331, 1678, 1679, 3189, 2504, 2326, 2623, 2617, 2450, 2124, 2350, 2351, 2628, 953, 956, 3468, 1539, 363, 1821, 364, 1542, 1376, 3499, 1943, 3034, 1405, 954, 755, 2361, 2258, 3767, 1434, 1436, 3699, 663, 3768, 756, 870, 1763, 1765, 1767, 1762, 3320, 1768, 1769, 1770, 1772, 1773, 3660, 3659, 1073, 2620, 558, 3063, 786, 788, 3030, 3031, 2757, 1932, 2424, 1781, 1707, 1207, 2054, 613, 2055, 1087, 1075, 1076, 3156, 3157, 3154, 2621, 3155, 695, 696, 1090, 1091, 2178, 1808, 1809, 2230, 1206, 1706, 1766, 1764, 3039, 3367, 1190, 3041, 3507, 910, 977, 861, 552, 2167, 2168, 2835, 1480, 3270, 3495, 3040, 2373, 589, 3271, 3615, 2320, 968, 969, 587, 2640, 2992, 1774, 3657, 3658, 722, 739, 723, 725, 729, 735, 740, 727, 734, 1228, 1215, 1217, 3632, 1455, 348, 1908, 2468, 1196, 2490, 609, 345, 430, 672, 1197, 344, 1454, 1907, 1685, 1079, 812, 3202, 1585, 1259, 2467, 2345, 2222, 2221, 3651, 3652, 1226, 738, 728, 732, 720, 724, 726, 730, 736, 741, 733, 721, 1222, 3650, 355, 2914, 2509, 3021, 356, 3046, 1924, 685, 2366, 83, 2212, 3783, 3784, 2211, 753, 536, 1888, 1235, 857, 858, 2347, 2348, 2491, 2492, 798, 84, 1584, 899, 1342, 2854, 997, 1335, 3365, 85, 754, 2853, 1343, 2855, 2488, 311, 309, 313, 527, 3165, 3366, 310, 3181, 2856, 2857, 1320, 1886, 3672, 684, 774, 771, 3068, 3069, 3671, 1891, 397, 1904, 395, 396, 3576, 3578, 3580, 3577, 3579, 3581, 279, 1921, 278, 2744, 2562, 898, 2785, 638, 637, 1388, 2587, 796, 1245, 1246, 1248, 1249, 2560, 2281, 2282, 814, 550, 406, 3494, 1387, 405, 404, 628, 354, 538, 400, 2371, 2924, 340, 979, 980, 338, 339, 3171, 1869, 3796, 1482, 1483, 2477, 2478, 1565, 2057, 907, 2937, 2938, 2939, 3083, 2363, 3253, 1063, 708, 835, 836, 1059, 707, 2852, 2851, 2711, 2364, 1548, 2612, 2629, 2630, 828, 2789, 709, 3640, 3432, 966, 2985, 830, 2586, 1866, 1867, 1865, 3434, 3436, 3438, 3435, 3437, 3439, 837, 965, 2984, 1733, 2585, 1099, 1100, 692, 2135, 3433, 1563, 3622, 1655, 1656, 833, 829, 3641, 710, 349, 3663, 2830, 1552, 1553, 2149, 1186, 1187, 2210, 3222, 275, 742, 743, 274, 1543, 2546, 2829, 1352, 1351, 625, 2864, 1268, 1269, 3373, 541, 542, 2865, 544, 656, 651, 657, 3251, 3634, 3250, 1465, 2501, 2140, 1466, 601, 602, 603, 2196, 2197, 604, 2502, 2141, 3656, 2386, 2387, 2388, 1001, 1002, 652, 3192, 3193, 660, 659, 658, 654, 3592, 3593, 3751, 3752, 947, 1097, 1098, 1291, 2822, 1293, 2532, 1729, 1726, 689, 2147, 2148, 3354, 3353, 3719, 3484, 2232, 2233, 1296, 2902, 2903, 2870, 2901, 2592, 2594, 2871, 1727, 1728, 1327, 1329, 1328, 1069, 1285, 1286, 3053, 1287, 3261, 1134, 1870, 1135, 1806, 889, 825, 824, 826, 1007, 823, 1309, 1310, 890, 1549, 1138, 1137, 1139, 1136, 1484, 1485, 1311, 1312, 3012, 3013, 2512, 2514, 944, 2511, 2513, 945, 3619, 3620, 2862, 2863, 885, 888, 886, 887, 1325, 1326, 701, 702, 700, 981, 3421, 3422, 697, 698, 567, 624, 564, 565, 3799, 3798, 2515, 1694, 3029, 1708, 2649, 598, 1945, 2798, 1796, 1798, 1797, 1649, 1650, 3146, 3603, 1785, 3118, 1557, 3036, 3037, 2539, 2538, 2040, 2041, 1058, 1833, 1813, 1055, 2266, 2632, 1947, 1948, 2619, 1880, 1881, 2131, 2132, 1533, 3369, 1323, 2352, 2353, 1324, 1857, 1858, 3196, 648, 649, 3197, 1284, 3212, 3772, 868, 3011, 867, 3010, 3238, 2910, 2911, 999, 2838, 1156, 1155, 2837, 676, 675, 2331, 706, 705, 872, 873, 3591, 3305, 1036, 1037, 2486, 925, 931, 3049, 3050, 1056, 1057, 2479, 2480, 3242, 3244, 3246, 3243, 3266, 3267, 3509, 1251, 2466, 3508, 2836, 1252, 1859, 1385, 3710, 2970, 2971, 1281, 1282, 2826, 2199, 2827, 2828, 1735, 1736, 2614, 2615, 1278, 1280, 2223, 1439, 1442, 3676, 2928, 2929, 3024, 3025, 3092, 1599, 3654, 1532, 1597, 1594, 3003, 1421, 1420, 1739, 1747, 1536, 2523, 2324, 3163, 3162, 1663, 3318, 1554, 3319, 3506, 2228, 2229, 3262, 2214, 3309, 3160, 3161, 3497, 3498, 1710, 3340, 3341, 1917, 1918, 1920, 2536, 2537, 2020, 2021, 2022, 2023, 2375, 3179, 2500, 3203, 2255, 2860, 2861, 2858, 2793, 2794, 2455, 3669, 2530, 2531, 3675, 3673, 2763, 3306, 3415, 3416, 3307, 2867, 2866, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3447, 3272, 3273, 3411, 3412, 3472, 3471, 3469, 3470, 3762, 3763, 3790, 3760, 3761, 3773, 3774, 3775, 3776, 3777, 3778]
pares = []
# # Iterar sobre os organismos (colunas) e calcular as distâncias entre os pares de primers
# for i, primer_i in enumerate(primers):	
# 	for j, primer_j in enumerate(primers):
# 		distancias = []
# 		if primer_i != primer_j and primer_i in filtered_primers and primer_j in filtered_primers:
# 			for organismo in df.columns[1:]:
# 				if np.isnan(df[organismo][i]) == False and np.isnan(df[organismo][j]) == False:
# 					distancia = calcular_distancia(df[organismo][i], df[organismo][j])
# 				else:
# 					distancia = -1
				
# 				# Verificar se a distância está dentro do intervalo de 500 a 800
# 				# if 500 <= distancia <= 800:
# 				# 	distancias.append(distancia)
# 				if distancia > 500:
# 					distancias.append(distancia)


# 			# if len(distancias) > 0:
# 			if len(distancias) >= len(df.columns[1:]) / 2:
# 				if (primer_j, primer_i) not in pares:
# 					pares.append((primer_i, primer_j))
# 					print((primer_i, primer_j), len(distancias))

for i, primer_i in enumerate(primers):	
	for j, primer_j in enumerate(primers):
		distancias = []
		if primer_i != primer_j and primer_i in filtered_primers and primer_j in filtered_primers:
			for organismo in df.columns[1:]:
				if np.isnan(df[organismo][i]) == False and np.isnan(df_reverse_complement[organismo][j]) == False:
					distancia = calcular_distancia(df[organismo][i], df_reverse_complement[organismo][j])
				else:
					distancia = -1
				
				# Verificar se a distância está dentro do intervalo de 500 a 800
				# if 500 <= distancia <= 800:
				# 	distancias.append(distancia)
				if distancia > 500:
					distancias.append(distancia)


			# if len(distancias) > 0:
			if len(distancias) >= len(df.columns[1:]) / 2:
				if (primer_j, primer_i) not in pares:
					pares.append((primer_i, primer_j))
					print((primer_i, primer_j), len(distancias))


output_dict = {'NAME': [], 'LEFT_PRIMER': [], 'RIGHT_PRIMER': []}
for pair in pares:
	output_dict['NAME'].append(str(pair[0]) + '-' + str(pair[1]))
	left = primers_df.loc[primers_df['id'] == pair[0]].reset_index()['nuc'][0]
	right = primers_df.loc[primers_df['id'] == pair[1]].reset_index()['nuc'][0]

	output_dict['LEFT_PRIMER'].append(left)
	output_dict['RIGHT_PRIMER'].append(right)


output_df = pd.DataFrame(output_dict)

output_df.to_csv('output_pairs_revcomp_less_degenerated.csv', sep=';', index=False)

# 200 -> 199 ficaram de fora 
# 61 -> 62 ficaram de fora
# 73 -> 72 73 ficou de fora
# 2031 -> nao achou, bac
# 354 -> 400 nao achou, mas é planta...